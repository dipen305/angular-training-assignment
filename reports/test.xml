<?xml version='1.0'?>
<testExecutions version='1'>
    <file path='src/app/countdown-with-service/display-timer/display-timer.component.spec.ts'>
        <testCase name='DisplayTimerComponent should create' duration='38'/>
        <testCase name='DisplayTimerComponent should create' duration='5'/>
    </file>
    <file path='src/app/countdown-with-service/timer-controller/timer-controller-with-service.component.spec.ts'>
        <testCase name='TimeControllerWithServiceComponent startPauseClick() should start the timer ' duration='26'/>
        <testCase name='TimeControllerWithServiceComponent should create' duration='7'/>
        <testCase name='TimeControllerWithServiceComponent reset() should reset the timer ' duration='6'/>
        <testCase name='TimeControllerWithServiceComponent startPauseClick() should pause the timer ' duration='7'/>
    </file>
    <file path='src/app/countdown-with-service/timer-event-count/timer-event-count.component.spec.ts'>
        <testCase name='TimerEventCountComponent should create' duration='6'/>
        <testCase name='TimerEventCountComponent should create' duration='6'/>
    </file>
    <file path='src/app/countdown-with-service/activity-log/activity-log.component.spec.ts'>
        <testCase name='ActivityLogComponent should create' duration='7'/>
        <testCase name='ActivityLogComponent should create' duration='4'/>
    </file>
    <file path='src/app/countdown/timer-controller/timer-controller.component.spec.ts'>
        <testCase name='TimeControllerComponent reset() should reset the timer ' duration='11'/>
        <testCase name='TimeControllerComponent should create' duration='6'/>
        <testCase name='TimeControllerComponent startPauseClick() should pause the timer if value is blank ' duration='6'/>
        <testCase name='TimeControllerComponent startPauseClick() should start the timer if value is > 0' duration='5'/>
    </file>
    <file path='src/app/countdown-with-service/countdown-with-service.component.spec.ts'>
        <testCase name='CountdownWithServiceComponent should create' duration='11'/>
    </file>
    <file path='src/app/countdown/countdown.component.spec.ts'>
        <testCase name='CountdownComponent should stop timer once it reaches to 0' duration='10'/>
        <testCase name='CountdownComponent should re-start timer' duration='6'/>
        <testCase name='CountdownComponent should start timer' duration='5'/>
        <testCase name='CountdownComponent should set the error message if no value entered and timer is not running' duration='6'/>
        <testCase name='CountdownComponent should create' duration='7'/>
        <testCase name='CountdownComponent should pause timer' duration='8'/>
        <testCase name='CountdownComponent should resume timer' duration='6'/>
    </file>
    <file path='src/app/banner/banner.component.spec.ts'>
        <testCase name='BannerComponent should create' duration='6'/>
    </file>
    <file path='src/app/app.component.spec.ts'>
        <testCase name='AppComponent should create the app' duration='9'/>
        <testCase name='AppComponent should have as title &apos;Assignment&apos;' duration='4'/>
    </file>
    <file path='src/app/products/products.component.spec.ts'>
        <testCase name='ProductsComponent priceFilter() => should filter data' duration='15'/>
        <testCase name='ProductsComponent should create' duration='5'/>
    </file>
    <file path='src/app/student-sheet/student-sheet.component.spec.ts'>
        <testCase name='StudentSheetComponent should create' duration='7'/>
        <testCase name='StudentSheetComponent sort() => should return sorted data' duration='5'/>
        <testCase name='StudentSheetComponent sort() => should sort the data' duration='5'/>
    </file>
    <file path='src/app/dynamic-box/dynamic-box.component.spec.ts'>
        <testCase name='DynamicBoxComponent boxButtonClick() => should show alert' duration='9'/>
        <testCase name='DynamicBoxComponent should create' duration='5'/>
        <testCase name='DynamicBoxComponent windowScroll() => should add value dynamically on scroll' duration='14'/>
    </file>
    <file path='src/app/shared/services/countdown.service.spec.ts'>
        <testCase name='Service: Countdown timerHandler() should pause the timer ' duration='0'/>
        <testCase name='Service: Countdown reset() should reset the timer ' duration='1'/>
        <testCase name='Service: Countdown should stop timer once it reaches to 0' duration='0'/>
        <testCase name='Service: Countdown timerHandler() should set error message if no value entered ' duration='0'/>
        <testCase name='Service: Countdown timerHandler() should start the timer ' duration='0'/>
        <testCase name='Service: Countdown timerHandler() should resume the timer ' duration='0'/>
        <testCase name='Service: Countdown timerHandler() should reset the timer ' duration='0'/>
        <testCase name='Service: Countdown should ...' duration='2'/>
    </file>
</testExecutions>